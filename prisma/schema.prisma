// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  // map id to object id (mongodb uses)
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String? // if it's not exist we sign in with google or github 
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId

  // relations
  // user can have many accounts
  accounts Account[]
}

// Account used for social login

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  // complete relations User
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  // create relation with User using userId field to reference user id field
  // Cascade instructions whats happened if user is deleted

  // unique combinations these fields
  @@unique([provider, providerAccountId])
}
